name: Lichess Bot

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Bot Mode'
        type: choice
        required: true
        options:
          - normal
          - matchmaking
          - tournament
      tournament_id:
        description: 'Tournament ID (if tournament mode)'
        type: string
        required: false
      team_id:
        description: 'Team ID (optional)'
        type: string
        required: false
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'config.yml'

permissions:
  actions: write
  contents: write

jobs:
  bot-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours

    steps:
      - name: Auto-cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Setup Stockfish Engine
        run: |
          mkdir -p engines
          curl -L -o stockfish.zip "http://abrok.eu/stockfish/latest/linux/stockfish_x64_modern.zip"
          unzip -o stockfish.zip -d engines/
          find engines/ -type f -name "stockfish_*" -exec mv {} engines/stockfish \;
          chmod +x engines/stockfish    
          
      - name: Setup fsf Engine
        run: |
          chmod +x ./engines/fsf || true

      - name: Configure Bot Token
        run: sed -i "s/TokenTimeIsBackBuddyss/${{ secrets.LICHESS_KEY }}/g" config.yml

      - name: Launch Bot
        run: |
          # Build command based on mode
          CMD="python3 -u user_interface.py"
          
          case "${{ github.event.inputs.mode }}" in
            "matchmaking")
              CMD="$CMD matchmaking"
              ;;
            "tournament")
              if [[ -n "${{ github.event.inputs.tournament_id }}" ]]; then
                CMD="$CMD --tournament ${{ github.event.inputs.tournament_id }}"
              fi
              ;;
          esac
          
          # Add team ID if provided
          if [[ -n "${{ github.event.inputs.team_id }}" ]]; then
            CMD="$CMD --team ${{ github.event.inputs.team_id }}"
          fi
          
          echo "Running command: $CMD"
          eval "$CMD"
